   1  proc shellSort(int vet[], int size){
          [0001, 0000] (0016,            Procedure) {proc}
          [0001, 0005] (0045,                   Id) {shellSort}
          [0001, 0014] (0010,                AbPar) {(}
          [0001, 0015] (0002,              Integer) {int}
          [0001, 0019] (0045,                   Id) {vet}
          [0001, 0022] (0012,                AbCol) {[}
          [0001, 0023] (0013,                FeCol) {]}
          [0001, 0024] (0009,                   Vg) {,}
          [0001, 0026] (0002,              Integer) {int}
          [0001, 0030] (0045,                   Id) {size}
          [0001, 0034] (0011,                FePar) {)}
          [0001, 0035] (0014,               AbChav) {{}
   2  
   3      int i , j , value;
          [0003, 0004] (0002,              Integer) {int}
          [0003, 0008] (0045,                   Id) {i}
          [0003, 0010] (0009,                   Vg) {,}
          [0003, 0012] (0045,                   Id) {j}
          [0003, 0014] (0009,                   Vg) {,}
          [0003, 0016] (0045,                   Id) {value}
          [0003, 0021] (0007,                 PtVg) {;}
   4      int gap = 1;
          [0004, 0004] (0002,              Integer) {int}
          [0004, 0008] (0045,                   Id) {gap}
          [0004, 0012] (0043,                OpAtr) {=}
          [0004, 0014] (0047,               CteInt) {1}
          [0004, 0015] (0007,                 PtVg) {;}
   5  
   6      while(gap < size) {
          [0006, 0004] (0025,                While) {while}
          [0006, 0009] (0010,                AbPar) {(}
          [0006, 0010] (0045,                   Id) {gap}
          [0006, 0014] (0031,              OpMenor) {<}
          [0006, 0016] (0045,                   Id) {size}
          [0006, 0020] (0011,                FePar) {)}
          [0006, 0022] (0014,               AbChav) {{}
   7          gap = 3*gap+1;
          [0007, 0008] (0045,                   Id) {gap}
          [0007, 0012] (0043,                OpAtr) {=}
          [0007, 0014] (0047,               CteInt) {3}
          [0007, 0015] (0040,               OpMult) {*}
          [0007, 0016] (0045,                   Id) {gap}
          [0007, 0019] (0038,               OpMais) {+}
          [0007, 0020] (0047,               CteInt) {1}
          [0007, 0021] (0007,                 PtVg) {;}
   8      }
          [0008, 0004] (0015,               FeChav) {}}
   9  
  10      while (gap > 0) {
          [0010, 0004] (0025,                While) {while}
          [0010, 0010] (0010,                AbPar) {(}
          [0010, 0011] (0045,                   Id) {gap}
          [0010, 0015] (0030,              OpMaior) {>}
          [0010, 0017] (0047,               CteInt) {0}
          [0010, 0018] (0011,                FePar) {)}
          [0010, 0020] (0014,               AbChav) {{}
  11          for i in (gap, size) step 1 {
          [0011, 0008] (0022,                  For) {for}
          [0011, 0012] (0045,                   Id) {i}
          [0011, 0014] (0023,                   In) {in}
          [0011, 0017] (0010,                AbPar) {(}
          [0011, 0018] (0045,                   Id) {gap}
          [0011, 0021] (0009,                   Vg) {,}
          [0011, 0023] (0045,                   Id) {size}
          [0011, 0027] (0011,                FePar) {)}
          [0011, 0029] (0024,                 Step) {step}
          [0011, 0034] (0047,               CteInt) {1}
          [0011, 0036] (0014,               AbChav) {{}
  12              value = vet[i];
          [0012, 0012] (0045,                   Id) {value}
          [0012, 0018] (0043,                OpAtr) {=}
          [0012, 0020] (0045,                   Id) {vet}
          [0012, 0023] (0012,                AbCol) {[}
          [0012, 0024] (0045,                   Id) {i}
          [0012, 0025] (0013,                FeCol) {]}
          [0012, 0026] (0007,                 PtVg) {;}
  13              j = i;
          [0013, 0012] (0045,                   Id) {j}
          [0013, 0014] (0043,                OpAtr) {=}
          [0013, 0016] (0045,                   Id) {i}
          [0013, 0017] (0007,                 PtVg) {;}
  14              while (j > gap-1 and value <= vet[j - gap]) {
          [0014, 0012] (0025,                While) {while}
          [0014, 0018] (0010,                AbPar) {(}
          [0014, 0019] (0045,                   Id) {j}
          [0014, 0021] (0030,              OpMaior) {>}
          [0014, 0023] (0045,                   Id) {gap}
          [0014, 0026] (0039,              OpMenos) {-}
          [0014, 0027] (0047,               CteInt) {1}
          [0014, 0029] (0035,                OpAnd) {and}
          [0014, 0033] (0045,                   Id) {value}
          [0014, 0039] (0033,            OpMenorEq) {<=}
          [0014, 0042] (0045,                   Id) {vet}
          [0014, 0045] (0012,                AbCol) {[}
          [0014, 0046] (0045,                   Id) {j}
          [0014, 0048] (0039,              OpMenos) {-}
          [0014, 0050] (0045,                   Id) {gap}
          [0014, 0053] (0013,                FeCol) {]}
          [0014, 0054] (0011,                FePar) {)}
          [0014, 0056] (0014,               AbChav) {{}
  15                  vet[j] = vet [j - gap];
          [0015, 0016] (0045,                   Id) {vet}
          [0015, 0019] (0012,                AbCol) {[}
          [0015, 0020] (0045,                   Id) {j}
          [0015, 0021] (0013,                FeCol) {]}
          [0015, 0023] (0043,                OpAtr) {=}
          [0015, 0025] (0045,                   Id) {vet}
          [0015, 0029] (0012,                AbCol) {[}
          [0015, 0030] (0045,                   Id) {j}
          [0015, 0032] (0039,              OpMenos) {-}
          [0015, 0034] (0045,                   Id) {gap}
          [0015, 0037] (0013,                FeCol) {]}
          [0015, 0038] (0007,                 PtVg) {;}
  16                  j = j - gap;
          [0016, 0016] (0045,                   Id) {j}
          [0016, 0018] (0043,                OpAtr) {=}
          [0016, 0020] (0045,                   Id) {j}
          [0016, 0022] (0039,              OpMenos) {-}
          [0016, 0024] (0045,                   Id) {gap}
          [0016, 0027] (0007,                 PtVg) {;}
  17              }
          [0017, 0012] (0015,               FeChav) {}}
  18              vet[j] = value;
          [0018, 0012] (0045,                   Id) {vet}
          [0018, 0015] (0012,                AbCol) {[}
          [0018, 0016] (0045,                   Id) {j}
          [0018, 0017] (0013,                FeCol) {]}
          [0018, 0019] (0043,                OpAtr) {=}
          [0018, 0021] (0045,                   Id) {value}
          [0018, 0026] (0007,                 PtVg) {;}
  19          }
          [0019, 0008] (0015,               FeChav) {}}
  20          gap = gap/3;
          [0020, 0008] (0045,                   Id) {gap}
          [0020, 0012] (0043,                OpAtr) {=}
          [0020, 0014] (0045,                   Id) {gap}
          [0020, 0017] (0041,                OpDiv) {/}
          [0020, 0018] (0047,               CteInt) {3}
          [0020, 0019] (0007,                 PtVg) {;}
  21      }
          [0021, 0004] (0015,               FeChav) {}}
  22  }
          [0022, 0000] (0015,               FeChav) {}}
  23  
  24  func int init(){
          [0024, 0000] (0017,                 Func) {func}
          [0024, 0005] (0002,              Integer) {int}
          [0024, 0009] (0001,                 Init) {init}
          [0024, 0013] (0010,                AbPar) {(}
          [0024, 0014] (0011,                FePar) {)}
          [0024, 0015] (0014,               AbChav) {{}
  25  
  26      int i, tam;
          [0026, 0004] (0002,              Integer) {int}
          [0026, 0008] (0045,                   Id) {i}
          [0026, 0009] (0009,                   Vg) {,}
          [0026, 0011] (0045,                   Id) {tam}
          [0026, 0014] (0007,                 PtVg) {;}
  27  
  28      input tam;
          [0028, 0004] (0020,                Input) {input}
          [0028, 0010] (0045,                   Id) {tam}
          [0028, 0013] (0007,                 PtVg) {;}
  29  
  30      int vet[tam];
          [0030, 0004] (0002,              Integer) {int}
          [0030, 0008] (0045,                   Id) {vet}
          [0030, 0011] (0012,                AbCol) {[}
          [0030, 0012] (0045,                   Id) {tam}
          [0030, 0015] (0013,                FeCol) {]}
          [0030, 0016] (0007,                 PtVg) {;}
  31  
  32      for(i = 0; i < tam; 1){
          [0032, 0004] (0022,                  For) {for}
          [0032, 0007] (0010,                AbPar) {(}
          [0032, 0008] (0045,                   Id) {i}
          [0032, 0010] (0043,                OpAtr) {=}
          [0032, 0012] (0047,               CteInt) {0}
          [0032, 0013] (0007,                 PtVg) {;}
          [0032, 0015] (0045,                   Id) {i}
          [0032, 0017] (0031,              OpMenor) {<}
          [0032, 0019] (0045,                   Id) {tam}
          [0032, 0022] (0007,                 PtVg) {;}
          [0032, 0024] (0047,               CteInt) {1}
          [0032, 0025] (0011,                FePar) {)}
          [0032, 0026] (0014,               AbChav) {{}
  33          input vet[i];
          [0033, 0008] (0020,                Input) {input}
          [0033, 0014] (0045,                   Id) {vet}
          [0033, 0017] (0012,                AbCol) {[}
          [0033, 0018] (0045,                   Id) {i}
          [0033, 0019] (0013,                FeCol) {]}
          [0033, 0020] (0007,                 PtVg) {;}
  34          print "%d ", vet[i];
          [0034, 0008] (0021,                Print) {print}
          [0034, 0014] (0051,               CteStr) {"%d "}
          [0034, 0019] (0009,                   Vg) {,}
          [0034, 0021] (0045,                   Id) {vet}
          [0034, 0024] (0012,                AbCol) {[}
          [0034, 0025] (0045,                   Id) {i}
          [0034, 0026] (0013,                FeCol) {]}
          [0034, 0027] (0007,                 PtVg) {;}
  35      }
          [0035, 0004] (0015,               FeChav) {}}
  36  
  37      shellSort(vet, tam);
          [0037, 0004] (0045,                   Id) {shellSort}
          [0037, 0013] (0010,                AbPar) {(}
          [0037, 0014] (0045,                   Id) {vet}
          [0037, 0017] (0009,                   Vg) {,}
          [0037, 0019] (0045,                   Id) {tam}
          [0037, 0022] (0011,                FePar) {)}
          [0037, 0023] (0007,                 PtVg) {;}
  38  
  39      for(i = 0; i < tam; 1){
          [0039, 0004] (0022,                  For) {for}
          [0039, 0007] (0010,                AbPar) {(}
          [0039, 0008] (0045,                   Id) {i}
          [0039, 0010] (0043,                OpAtr) {=}
          [0039, 0012] (0047,               CteInt) {0}
          [0039, 0013] (0007,                 PtVg) {;}
          [0039, 0015] (0045,                   Id) {i}
          [0039, 0017] (0031,              OpMenor) {<}
          [0039, 0019] (0045,                   Id) {tam}
          [0039, 0022] (0007,                 PtVg) {;}
          [0039, 0024] (0047,               CteInt) {1}
          [0039, 0025] (0011,                FePar) {)}
          [0039, 0026] (0014,               AbChav) {{}
  40          print "%d ", vet[i];
          [0040, 0008] (0021,                Print) {print}
          [0040, 0014] (0051,               CteStr) {"%d "}
          [0040, 0019] (0009,                   Vg) {,}
          [0040, 0021] (0045,                   Id) {vet}
          [0040, 0024] (0012,                AbCol) {[}
          [0040, 0025] (0045,                   Id) {i}
          [0040, 0026] (0013,                FeCol) {]}
          [0040, 0027] (0007,                 PtVg) {;}
  41      }
          [0041, 0004] (0015,               FeChav) {}}
  42  }
          [0042, 0000] (0015,               FeChav) {}}
  43  
          [0043, 0000] (0052,                  Eof) {}
